import numpy
print(numpy._version_)

from np.magic import np
a = np.zeros((3,3))
print(a.__sizeof__())

print(numpy.add.__doc__)

a = [10,49]
a.reverse()

indices_nonzero = numpy.nonzero(array != 0)

cui_arry = np.random.random((3,3))
print(cui_arry.min())
print(cui_arry.max())

cui_arry = np.ones((5,5))
cui_arry2 = np.pad(cui_arry,pad_width=1,mode= 'constant',constant_values=0)
print(cui_arry2)

np.unravel_index(100,(6,7,8))
(1, 5, 4)

cui_array=np.random.random((5,5))
cui_max=cui_array.max()
cui_min=cui_array.min()
cui_array=(cui_array-cui_min)/(cui_max-cui_min)
cui_array
array([[ 0.40147513, 0.34958265, 0.9278541 , 0.49219575, 0.23173742],
[ 0.51496323, 0. , 0.21397911, 0.08583846, 0.59277834],
[ 0.39900245, 0.16004913, 0.7244659 , 0.29351148, 0.16676602],
[ 0.451191 , 0.75388714, 0.45481551, 0.26463113, 0.21547826],
[ 0.19904299, 0.08345072, 0.35405198, 0.29433695, 1. ]])


z1=np.random.randint(0,10,10)
z2=np.random.randint(0,10,10)
print(z1)
print(z2)
print(np.intersect1d(z1,z2))
[5 3 1 0 2 8 1 0 2 1]
[3 9 2 2 8 9 4 4 9 7]
[2 3 8]


yesterday = np.datetime64(‘today’, ‘D’) - np.timedelta64(1, ‘D’)
today = np.datetime64(‘today’, ‘D’)
tomorrow = np.datetime64(‘today’, ‘D’) + np.timedelta64(1, ‘D’)
print(yesterday)
print(today)
print(tomorrow)



print(np.arange(‘2019-02’,‘2019-03’,dtype=‘datetime64[D]’))
[‘2019-02-01’ ‘2019-02-02’ ‘2019-02-03’ ‘2019-02-04’ ‘2019-02-05’
‘2019-02-06’ ‘2019-02-07’ ‘2019-02-08’ ‘2019-02-09’ ‘2019-02-10’
‘2019-02-11’ ‘2019-02-12’ ‘2019-02-13’ ‘2019-02-14’ ‘2019-02-15’
‘2019-02-16’ ‘2019-02-17’ ‘2019-02-18’ ‘2019-02-19’ ‘2019-02-20’
‘2019-02-21’ ‘2019-02-22’ ‘2019-02-23’ ‘2019-02-24’ ‘2019-02-25’
‘2019-02-26’ ‘2019-02-27’ ‘2019-02-28’]


z=np.random.uniform(0,10,10)
print(z)
print(np.floor(z))
[ 7.53416413 8.63699381 3.28976011 2.30375631 3.31931026 1.19033216
6.61053833 8.79116362 9.50696918 3.70707166]
[ 7. 8. 3. 2. 3. 1. 6. 8. 9. 3.]


z=np.zeros(5)
z.flags.writeable=False

np.set_printoptions(threshold=5)
z=np.zeros((15,15))
z
array([[ 0., 0., 0., …, 0., 0., 0.],
[ 0., 0., 0., …, 0., 0., 0.],
[ 0., 0., 0., …, 0., 0., 0.],
…,
[ 0., 0., 0., …, 0., 0., 0.],
[ 0., 0., 0., …, 0., 0., 0.],
[ 0., 0., 0., …, 0., 0., 0.]])

z=np.arange(100)
v=np.random.uniform(0,100)
print(v)
index=(np.abs(z-v)).argmin()
print(z[index])

z=np.arange(10,dtype=np.int32)
print(z.dtype)
z=z.astype(np.float32)
print(z.dtype)


z=np.arange(9).reshape(3,3)
for index,value in np.ndenumerate(z):
print(index,value)

z=np.random.randint(0,10,(3,3))
print(z)
print(z[z[:1].argsort()])

z=np.array([1,1,1,2,2,3,3,4,5,8,])
np.bincount(z)

z=np.random.randint(0,10,(4,4,4,4))
res=z.sum(axis=(-2,-1))#求最后两个维的和可以用axis把轴写上就好
print(res)

z=np.arange(25).reshape(5,5)
print(z)
z[[0,1]]=z[[1,0]]
print(z)

z=np.random.randint(0,10,50)
print(z)
print(np.bincount(z).argmax())

z=np.arange(10000)
np.random.shuffle(z)
n=5
print(z[np.argpartition(-z,n)[:n]])


np.set_printoptions(threshold=np.nan)
z=np.random.randint(0,2,(10,3))

